package com.ms.inadvance.entity;
// Generated 19-03-2024 15:48:26 by Hibernate Tools 4.3.6.Final

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;

/**
 * Realtor generated by hbm2java
 */
@Entity
@PrimaryKeyJoinColumn(name="id")
@Table(schema = "public", name = "realtor")
public class Realtor extends Users implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private BrokerCompany brokerCompany;
	private Users users;
	private String licenseNumber;
	private String notes;
	private Set<RealtorOperation> realtorOperations = new HashSet<RealtorOperation>(0);

	public Realtor() {
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "broker_company_id")
	public BrokerCompany getBrokerCompany() {
		return this.brokerCompany;
	}

	public void setBrokerCompany(BrokerCompany brokerCompany) {
		this.brokerCompany = brokerCompany;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@Column(name = "license_number", nullable = false, length = 20)
	public String getLicenseNumber() {
		return this.licenseNumber;
	}

	public void setLicenseNumber(String licenseNumber) {
		this.licenseNumber = licenseNumber;
	}

	@Column(name = "notes", nullable = false, length = 500)
	public String getNotes() {
		return this.notes;
	}

	public void setNotes(String notes) {
		this.notes = notes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "realtor")
	public Set<RealtorOperation> getRealtorOperations() {
		return this.realtorOperations;
	}

	public void setRealtorOperations(Set<RealtorOperation> realtorOperations) {
		this.realtorOperations = realtorOperations;
	}

}
